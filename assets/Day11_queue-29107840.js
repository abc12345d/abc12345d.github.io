const g="data:text/markdown;base64,IyAyMzkuIFNsaWRpbmcgV2luZG93IE1heGltdW0KCiMjIyB3YXkgMTogYnJ1dGUtZm9yY2UoZ2V0dGluZyBtYXggd2hpbGUgc2xpZGluZyB3aW5kb3cpCkNvdWxkIG5vdCBwYXNzIGFsbCB0aGUgbGVldGNvZGUgdGVzdCBjYXNlIHNpbmNlIGl0IGhhcyBoaWdoIHRpbWUgY29tcGxleGl0eS5cClRpbWUgY29tcGxleGl0eTogTyhuKmspIApTcGFjZSBjb21wbGV4aXR5OiBPKGspCgpgYGBQWVRIT04KZGVmIG1heFNsaWRpbmdXaW5kb3coc2VsZiwgbnVtczogTGlzdFtpbnRdLCBrOiBpbnQpIC0+IExpc3RbaW50XToKICAgIGlmIGxlbihudW1zKSA8PSBrOgogICAgICAgIHJldHVybiBbbWF4KG51bXMpXQoKICAgIHdpbmRvdyA9IG51bXNbOmtdCiAgICBtYXhfbGlzdCA9IFttYXgod2luZG93KV0KCiAgICBmb3IgaSBpbiByYW5nZShrLGxlbihudW1zKSk6CgogICAgICAgIHdpbmRvdyA9IG51bXNbaSArIDEgLSBrIDogaSArIDFdCiAgICAgICAgbWF4X2xpc3QuYXBwZW5kKG1heCh3aW5kb3cpKQogICAgCiAgICByZXR1cm4gbWF4X2xpc3QKYGBgCgojIyMgd2F5IDI6IG1haW50YWluIGEgbW9ub3RvbmljIHF1ZXVlIHdoaWNoIHN0b3JlcyBwb3NzaWJsZSBtYXggdmFsdWVzIG9mIHNsaWRpbmcgd2luZG93cwpUaW1lIGNvbXBsZXhpdHk6IE8obiksIHNpbmNlIGV2ZXJ5IGVsZW1lbnQgaW4gdGhlIG1vbm90b25pYyBxdWV1ZSB3aWxsIG9ubHkgYmUgcHVzaCBhbmQgcG9wIGJ5IG9uZSB0aW1lXAoKPGltZyB3aWR0aD0iMTAzNyIgYWx0PSIyMDIzMDIxMzEzNDcyMCIgc3JjPSJodHRwczovL2dpdGh1Yi5jb20vYWJjMTIzNDVkL2FsZ29yaXRobV9wcmFjdGljZS9hc3NldHMvNDQ1MTI3MjIvOGFiMGI1ZjYtYTg2Ni00OWFhLWE5NjYtYzVmYzgzMDZmNjRhIj4KClNwYWNlIGNvbXBsZXhpdHk6IE8oaykKCmBgYFBZVEhPTgpmcm9tIGNvbGxlY3Rpb25zIGltcG9ydCBkZXF1ZQpjbGFzcyBtb25vdG9uaWNfcXVldWU6CiAgICAjIHZhbHVlcyBpbiBxdWV1ZSBhcmUgaW4gZGVzY2VuZGluZyBvcmRlcgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAgICAgIHNlbGYucXVldWUgPSBkZXF1ZSgpCgogICAgZGVmIHB1c2goc2VsZix2YWwpOgogICAgICAgIHdoaWxlIHNlbGYucXVldWUgYW5kIHNlbGYucXVldWVbLTFdIDwgdmFsOgogICAgICAgICAgICAjIHBvcCBhbGwgdGhlIGVsZW1lbnRzIGluIHRoZSBxdWV1ZSB3aGljaCBzbWFsbGVyIHRoYW4gdGhlIHZhbAogICAgICAgICAgICBzZWxmLnF1ZXVlLnBvcCgpCiAgICAgICAgc2VsZi5xdWV1ZS5hcHBlbmQodmFsKQoKICAgIGRlZiBwb3Aoc2VsZik6CiAgICAgICAgcmV0dXJuIHNlbGYucXVldWUucG9wbGVmdCgpCgogICAgZGVmIGdldF9tYXhfdmFsdWUoc2VsZik6CiAgICAgICAgIyBhcyB0aGlzIGlzIGEgbW9ub3RvbmljIHF1ZXVlLAogICAgICAgICMgdGhlIGZyb250IHZhbHVlIHdpbGwgYWx3YXlzIGJlIHRoZSBtYXhpbXVtIHZhbHVlIG9mIHRoZSBxdWV1ZQogICAgICAgIHJldHVybiBzZWxmLnF1ZXVlWzBdIGlmIGxlbihzZWxmLnF1ZXVlKSA+IDAgZWxzZSAtZmxvYXQoImluZiIpCgpjbGFzcyBTb2x1dGlvbjoKICAgIGRlZiBtYXhTbGlkaW5nV2luZG93KHNlbGYsIG51bXM6IExpc3RbaW50XSwgazogaW50KSAtPiBMaXN0W2ludF06CiAgICAgICAgaWYgbGVuKG51bXMpIDw9IGs6CiAgICAgICAgICAgIHJldHVybiBbbWF4KG51bXMpXQogICAgICAgIAogICAgICAgIHF1ZXVlID0gbW9ub3RvbmljX3F1ZXVlKCkKICAgICAgICBtYXhfbGlzdCA9IFtdCgogICAgICAgICMgY29uc3RydWN0IHRoZSBzbGlkaW5nIHdpbmRvdyBieSB1c2luZyBmaXJzdCAoay0xKSBlbGVtZW50cyBvZiBudW1zCiAgICAgICAgZm9yIGkgaW4gbnVtc1s6a106CiAgICAgICAgICAgIHF1ZXVlLnB1c2goaSkKICAgICAgICBtYXhfbGlzdC5hcHBlbmQocXVldWUuZ2V0X21heF92YWx1ZSgpKQoKICAgICAgICAjIHNsaWRpbmcgdGhyb3VnaCB0aGUgcmVzdCBvZiB0aGUgbnVtcwogICAgICAgIGZvciBzdGFydCwgZW5kIGluIGVudW1lcmF0ZShyYW5nZShrLCBsZW4obnVtcykpKToKICAgICAgICAgICAgaWYgbnVtc1tzdGFydF0gPT0gcXVldWUuZ2V0X21heF92YWx1ZSgpOgogICAgICAgICAgICAgICAgcXVldWUucG9wKCkKICAgICAgICAgICAgcXVldWUucHVzaChudW1zW2VuZF0pCiAgICAgICAgICAgIAogICAgICAgICAgICBtYXhfbGlzdC5hcHBlbmQocXVldWUuZ2V0X21heF92YWx1ZSgpKQogICAgICAgIAogICAgICAgIHJldHVybiBtYXhfbGlzdApgYGAKCiMgMzQ3LiBUb3AgSyBGcmVxdWVudCBFbGVtZW50cwpVc2UgaGFzaCBtYXAgYW5kIGhlYXAgc29ydFwKVGltZSBjb21wbGV4aXR5OiBPKG4gbG9nIGspCgpgYGBQWVRIT04KaW1wb3J0IGhlYXBxCmNsYXNzIFNvbHV0aW9uOgogICAgZGVmIHRvcEtGcmVxdWVudChzZWxmLCBudW1zOiBMaXN0W2ludF0sIGs6IGludCkgLT4gTGlzdFtpbnRdOgogICAgICAgICMgZGVjbGFyZSBhIGRpY3Qgd2hlcmUgbnVtYmVycyBhcyBrZXlzIGFuZCBmcmVxdWVuY3kgb2YgdGhlIG51bWJlcnMgYXMgdmFsdWVzCiAgICAgICAgdmFsX2ZyZXFfbWFwID0ge30KICAgICAgICBmb3IgaSBpbiBudW1zOgogICAgICAgICAgICBpZiBpIGluIHZhbF9mcmVxX21hcC5rZXlzKCk6CiAgICAgICAgICAgICAgICB2YWxfZnJlcV9tYXBbaV0gKz0gMQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgdmFsX2ZyZXFfbWFwW2ldID0gMQoKICAgICAgICAjIGhlYXAgc29ydCB0aGUgaXRlbXMgb2YgdmFsX2ZyZXFfbWFwIGJ5IHZhbHVlcwogICAgICAgIGggPSBbXQogICAgICAgIGZvciBrZXksIHZhbHVlIGluIHZhbF9mcmVxX21hcC5pdGVtcygpOgogICAgICAgICAgICBoZWFwcS5oZWFwcHVzaChoLCAodmFsdWUsa2V5KSkKCiAgICAgICAgICAgIGlmIGxlbihoKSA+IGs6CiAgICAgICAgICAgICAgICBoZWFwcS5oZWFwcG9wKGgpCgogICAgICAgIHJldHVybiBba2V5IGZvciAodmFsLGtleSkgaW4gaF0KYGBg";export{g as default};
