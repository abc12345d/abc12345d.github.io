const g="data:text/markdown;base64,IyAxMTAuIEJhbGFuY2VkIEJpbmFyeSBUcmVlCiMjIyB3YXkgMTogcmVjdXJzaXZlIGFwcHJvYWNoIApXYXkgMSBpcyBsZXNzIGVmZmljaWVudCBhcyB3ZSB3aWxsIGFwcGx5IHRoZSBgZ2V0X2hlaWdodGAgdG8gdmlzaXRlZCBub2RlIGFnYWluLlwKVGltZSBjb21wbGV4aXR5OiBPKG48c3VwPjI8L3N1cD4pXApTcGFjZSBjb21wbGV4aXR5OiBPKGxvZyBuKQpgYGBQWVRIT04KZGVmIGlzQmFsYW5jZWQoc2VsZiwgcm9vdDogT3B0aW9uYWxbVHJlZU5vZGVdKSAtPiBib29sOgogICAgZGVmIGdldF9oZWlnaHQoY3Vycik6CiAgICAgICAgaWYgbm90IGN1cnI6CiAgICAgICAgICAgIHJldHVybiAwCiAgICAgICAgcmV0dXJuIDEgKyBtYXgoZ2V0X2hlaWdodChjdXJyLmxlZnQpLCBnZXRfaGVpZ2h0KGN1cnIucmlnaHQpKQoKICAgIGlmIG5vdCByb290OgogICAgICAgIHJldHVybiBUcnVlCiAgICAKICAgIGlmIGFicyhnZXRfaGVpZ2h0KHJvb3QubGVmdCkgLSBnZXRfaGVpZ2h0KHJvb3QucmlnaHQpKSA+IDE6CiAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAKICAgIHJldHVybiBzZWxmLmlzQmFsYW5jZWQocm9vdC5sZWZ0KSBhbmQgc2VsZi5pc0JhbGFuY2VkKHJvb3QucmlnaHQpCmBgYAojIyMgd2F5IDI6IHJlY3Vyc2l2ZSBhcHByb2FjaApXYXkgMiBpcyBtb3JlIGVmZmljaWVudCBjb21wYXJlZCB0byB3YXkgMSBzaW5jZSB3ZSBqdXN0IHJldHVybiAtMSBvbmNlIHdlIGhhdmUgZm91bmQgdW5iYWxhbmNlZCBzdWJ0cmVlLlwKVGltZSBjb21wbGV4aXR5OiBPKG4pXApTcGFjZSBjb21wbGV4aXR5OiBPKGxvZyBuKQpgYGBQWVRIT04KZGVmIGlzQmFsYW5jZWQoc2VsZiwgcm9vdDogT3B0aW9uYWxbVHJlZU5vZGVdKSAtPiBib29sOgogICAgZGVmIGdldF9oZWlnaHQoY3Vycik6CiAgICAgICAgaWYgbm90IGN1cnI6CiAgICAgICAgICAgIHJldHVybiAwCgogICAgICAgIGxlZnRfaGVpZ2h0ID0gZ2V0X2hlaWdodChjdXJyLmxlZnQpCiAgICAgICAgcmlnaHRfaGVpZ2h0ID0gZ2V0X2hlaWdodChjdXJyLnJpZ2h0KQoKICAgICAgICBpZiBsZWZ0X2hlaWdodCA9PSAtMSBvciByaWdodF9oZWlnaHQgPT0gLTE6CiAgICAgICAgICAgICMgYSB0cmVlIGlzIHVuYmFsYW5jZWQgaWYgZWl0aGVyIG9mIGl0cyBzdWJ0cmVlIGlzIHVuYmFsYW5jZWQKICAgICAgICAgICAgcmV0dXJuIC0xCgogICAgICAgIGlmIGFicyhsZWZ0X2hlaWdodCAtIHJpZ2h0X2hlaWdodCkgPiAxOgogICAgICAgICAgICAjIGZvdW5kIHVuYmFsYW5jZWQgdHJlZQogICAgICAgICAgICByZXR1cm4gLTEKCiAgICAgICAgIyBnZXQgaGVpZ2h0IG9mIGN1cnIgbm9kZQogICAgICAgIHJldHVybiAxICsgbWF4KGxlZnRfaGVpZ2h0LCByaWdodF9oZWlnaHQpCgogICAgcmV0dXJuIFRydWUgaWYgZ2V0X2hlaWdodChyb290KSAhPSAtMSBlbHNlIEZhbHNlCmBgYAojIDI1Ny4gQmluYXJ5IFRyZWUgUGF0aHMKIVtdKC4vaW1hZ2VzLzIwMjMwMjE5MTEyNDI4LnBuZykgICAKIyMjIHdheSAxOiBhcyBvdXIgaW5wdXQgdG8gbmV4dCBsZXZlbCBpcyBhICdtdXRhYmxlJyBwYXRoLCB3ZSBuZWVkIHRvIGBwYXRoLnBvcCgpYCB3aGVuIGJhY2t0cmFja2luZwpgYGBQWVRIT04KZGVmIGJpbmFyeVRyZWVQYXRocyhzZWxmLCByb290OiBPcHRpb25hbFtUcmVlTm9kZV0pIC0+IExpc3Rbc3RyXToKICAgIGRlZiByZWN1cihjdXJyLCBwYXRoKToKICAgICAgICBwYXRoLmFwcGVuZChzdHIoY3Vyci52YWwpKQoKICAgICAgICBpZiBub3QgKGN1cnIubGVmdCBvciBjdXJyLnJpZ2h0KToKICAgICAgICAgICAgcmVzX2xpc3QuYXBwZW5kKCItPiIuam9pbihwYXRoKSkKICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgCiAgICAgICAgaWYgY3Vyci5sZWZ0OgogICAgICAgICAgICByZWN1cihjdXJyLmxlZnQsIHBhdGgpCiAgICAgICAgICAgIHBhdGgucG9wKCkKCiAgICAgICAgaWYgY3Vyci5yaWdodDogIAogICAgICAgICAgICByZWN1cihjdXJyLnJpZ2h0LCBwYXRoKQogICAgICAgICAgICBwYXRoLnBvcCgpCgogICAgcmVzX2xpc3QgPSBbXQogICAgcmVjdXIocm9vdCwgW10pCiAgICByZXR1cm4gcmVzX2xpc3QKYGBgCiMjIyB3YXkgMjogYXMgb3VyIGlucHV0IHRvIG5leHQgbGV2ZWwgaXMgYSBuZXcgcGF0aCwgc28gd2UgZG9uJ3QgbmVlZCB0byBkbyAgYW55dGhpbmcgd2hlbiBiYWNrdHJhY2tpbmcKYGBgUFlUSE9OCmRlZiBiaW5hcnlUcmVlUGF0aHMoc2VsZiwgcm9vdDogT3B0aW9uYWxbVHJlZU5vZGVdKSAtPiBMaXN0W3N0cl06CiAgICBkZWYgcmVjdXIoY3VyciwgcGF0aCk6CiAgICAgICAgaWYgbm90IChjdXJyLmxlZnQgb3IgY3Vyci5yaWdodCk6CiAgICAgICAgICAgIHBhdGguYXBwZW5kKHN0cihjdXJyLnZhbCkpCiAgICAgICAgICAgIHJlc19saXN0LmFwcGVuZCgiLT4iLmpvaW4ocGF0aCkpCiAgICAgICAgICAgIHJldHVybgogICAgICAgIAogICAgICAgIGlmIGN1cnIubGVmdDoKICAgICAgICAgICAgcmVjdXIoY3Vyci5sZWZ0LCBwYXRoICsgW3N0cihjdXJyLnZhbCldKSAKCiAgICAgICAgaWYgY3Vyci5yaWdodDoKICAgICAgICAgICAgcmVjdXIoY3Vyci5yaWdodCwgcGF0aCArIFtzdHIoY3Vyci52YWwpXSkgCgogICAgICAgIAogICAgcmVzX2xpc3QgPSBbXQogICAgcmVjdXIocm9vdCwgW10pCiAgICByZXR1cm4gcmVzX2xpc3QKYGBgCiMgNDA0LiBTdW0gb2YgTGVmdCBMZWF2ZXMKYGBgUFlUSE9OCmRlZiBzdW1PZkxlZnRMZWF2ZXMoc2VsZiwgcm9vdDogT3B0aW9uYWxbVHJlZU5vZGVdKSAtPiBpbnQ6CiAgICBkZWYgcmVjdXIoY3Vycik6CiAgICAgICAgaWYgbm90IGN1cnI6CiAgICAgICAgICAgIHJldHVybiAwCiAgICAgICAgaWYgY3Vyci5sZWZ0IGFuZCBub3QgY3Vyci5sZWZ0LmxlZnQgYW5kIG5vdCBjdXJyLmxlZnQucmlnaHQ6CiAgICAgICAgICAgIHJldHVybiBjdXJyLmxlZnQudmFsICsgcmVjdXIoY3Vyci5yaWdodCkKCiAgICAgICAgcmV0dXJuIHJlY3VyKGN1cnIubGVmdCkgKyByZWN1cihjdXJyLnJpZ2h0KQogICAgCiAgICByZXR1cm4gcmVjdXIocm9vdCkKYGBgCgo=";export{g as default};
