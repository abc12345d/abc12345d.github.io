const g="data:text/markdown;base64,IyA5My4gUmVzdG9yZSBJUCBBZGRyZXNzZXMKIVtdKC4vaW1hZ2VzLzIwMjMwMjI3MTcwNzI4LnBuZykgIAojIyMgd2F5IDE6IGJhY2t0cmFja2luZyB3aXRoIHN0YXJ0SW5kZXggYW5kIGxhc3RJbmRleApgYGBQWVRIT04KZGVmIHJlc3RvcmVJcEFkZHJlc3NlcyhzZWxmLCBzOiBzdHIpIC0+IExpc3Rbc3RyXToKICAgIGRlZiBpc1ZhbGlkU3ViSVAocyk6CiAgICAgICAgaWYgbGVuKHMpID4gMSBhbmQgc1swXSA9PSAnMCc6CiAgICAgICAgICAgICMgZGV0ZWN0IGxlYWRpbmcgemVyb3MKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgaWYgcyBhbmQgaW50KHMpID4gMjU1OgogICAgICAgICAgICAjIG1vcmUgdGhhbiAyNTUKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZWYgYmFja3RyYWNrKHBhdGgsIHMsIHN0YXJ0SW5kZXgpOgogICAgICAgIGlmIGxlbihzKSA9PSAwOgogICAgICAgICAgICBpZiBsZW4ocGF0aCkgPT0gNDoKICAgICAgICAgICAgICAgIHJlc19saXN0LmFwcGVuZCgiLiIuam9pbihwYXRoKSkKICAgICAgICAgICAgcmV0dXJuCgogICAgICAgIGxhc3RJbmRleCA9IG1pbihzdGFydEluZGV4ICsgMywgbGVuKHMpKQogICAgICAgIGZvciBpIGluIHJhbmdlKHN0YXJ0SW5kZXgsbGFzdEluZGV4KToKICAgICAgICAgICAgc3ViSVAgPSBzW3N0YXJ0SW5kZXg6aSsxXQoKICAgICAgICAgICAgaWYgbm90IGlzVmFsaWRTdWJJUChzdWJJUCk6CiAgICAgICAgICAgICAgICBjb250aW51ZQoKICAgICAgICAgICAgaWYgbGVuKHBhdGgpID09IDQ6CiAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgCiAgICAgICAgICAgIHBhdGguYXBwZW5kKHN1YklQKQogICAgICAgICAgICBiYWNrdHJhY2socGF0aCwgc1tpKzE6XSwgc3RhcnRJbmRleCkKICAgICAgICAgICAgcGF0aC5wb3AoKQoKICAgIHJlc19saXN0ID0gW10KICAgIGJhY2t0cmFjayhbXSwgcywgMCkKICAgIHJldHVybiByZXNfbGlzdApgYGAKIyMjIHdheSAyOiBiYWNrdHJhY2tpbmcgd2l0aCBzbWFsbGVyIHN0cmluZwpgYGBQWVRIT04KZGVmIHJlc3RvcmVJcEFkZHJlc3NlcyhzZWxmLCBzOiBzdHIpIC0+IExpc3Rbc3RyXToKICAgIGRlZiBpc1ZhbGlkU3ViSVAocyk6CiAgICAgICAgaWYgbGVuKHMpID4gMSBhbmQgc1swXSA9PSAnMCc6CiAgICAgICAgICAgICMgZGV0ZWN0IGxlYWRpbmcgemVyb3MKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgaWYgcyBhbmQgaW50KHMpID4gMjU1OgogICAgICAgICAgICAjIG1vcmUgdGhhbiAyNTUKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZWYgYmFja3RyYWNrKHBhdGgsIHMpOgogICAgICAgIGlmIGxlbihzKSA9PSAwOgogICAgICAgICAgICBpZiBsZW4ocGF0aCkgPT0gNDoKICAgICAgICAgICAgICAgIHJlc19saXN0LmFwcGVuZCgiLiIuam9pbihwYXRoKSkKICAgICAgICAgICAgcmV0dXJuCgogICAgICAgIGxhc3RJbmRleCA9IG1pbig0LCBsZW4ocykrMSkKICAgICAgICBmb3IgaSBpbiByYW5nZSgxLGxhc3RJbmRleCk6CiAgICAgICAgICAgIHN1YklQID0gc1s6aV0KCiAgICAgICAgICAgIGlmIG5vdCBpc1ZhbGlkU3ViSVAoc3ViSVApOgogICAgICAgICAgICAgICAgY29udGludWUKCiAgICAgICAgICAgIGlmIGxlbihwYXRoKSA9PSA0OgogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgCiAgICAgICAgICAgIHBhdGguYXBwZW5kKHN1YklQKQogICAgICAgICAgICBiYWNrdHJhY2socGF0aCwgc1tpOl0pCiAgICAgICAgICAgIHBhdGgucG9wKCkKCiAgICByZXNfbGlzdCA9IFtdCiAgICBiYWNrdHJhY2soW10sIHMpCiAgICByZXR1cm4gcmVzX2xpc3QKYGBgCiMgNzguIFN1YnNldHMKIVtdKC4vaW1hZ2VzLzIwMjMwMjI4MTEzNDI3LnBuZykKRm9yIGJhY2t0cmFja2luZyBpbiBwcm9ibGVtIGludm9sdmVkIHN1YnNldHMsIHdlIHJlbW92ZSBkdXBsaWNhdGVzIGF0IHRoZSBicmFuY2ggbGV2ZWwgYnkgdXNpbmcgYHN0YXJ0SW5kZXhgIGxpa2UgaW4gW2JhY2t0cmFja2luZyBpbiBwcm9ibGVtIGludm9sdmVkIGNvbWJpbmF0aW9uXSguL0RheTIzX2JhY2t0cmFja2luZ19jb21iaW5hdGlvbl9wYXJ0aXRpb24ubWQvIzQwLWNvbWJpbmF0aW9uLXN1bS1paSkuIEhvd2V2ZXIsIGluc3RlYWQgb2Ygb25seSByZWNvcmRpbmcgdGhlIGBwYXRoYCB3aGVuIHdlIHJlYWNoIHRoZSBsZWFmIG5vZGUgb2YgdGhlIHN0YXRlLXNwYWNlIHRyZWUsIHdlIHJlY29yZCB0aGUgYHBhdGhgIGF0IGV2ZXJ5IG5vZGUgd2hpbGUgd2UgdHJhdmVyc2UgdGhlIHN0YXRlLXNwYWNlIHRyZWUgdXNpbmcgYmFja3RyYWNraW5nLgoKYGBgUFlUSE9OCmRlZiBzdWJzZXRzKHNlbGYsIG51bXM6IExpc3RbaW50XSkgLT4gTGlzdFtMaXN0W2ludF1dOgogICAgZGVmIGJhY2t0cmFjayhzdGFydEluZGV4LCBudW1zLCBwYXRoKToKICAgICAgICByZXNfbGlzdC5hcHBlbmQocGF0aFs6XSkKCiAgICAgICAgaWYgc3RhcnRJbmRleCA+IGxlbihudW1zKToKICAgICAgICAgICAgcmV0dXJuCgogICAgICAgIGZvciBpIGluIHJhbmdlKHN0YXJ0SW5kZXgsIGxlbihudW1zKSk6CiAgICAgICAgICAgIHBhdGguYXBwZW5kKG51bXNbaV0pCiAgICAgICAgICAgIGJhY2t0cmFjayhpICsgMSwgbnVtcywgcGF0aCkKICAgICAgICAgICAgcGF0aC5wb3AoKQoKICAgIHJlc19saXN0ID0gW10KICAgIGJhY2t0cmFjaygwLCBudW1zLCBbXSkKICAgIHJldHVybiByZXNfbGlzdApgYGAKIyA5MC4gU3Vic2V0cyBJSSAKIyMjIHdheSAxOiB3aXRoIGFuIGV4dHJhIGFycmF5IGB1c2VkYApgYGBQWVRIT04KZGVmIHN1YnNldHNXaXRoRHVwKHNlbGYsIG51bXM6IExpc3RbaW50XSkgLT4gTGlzdFtMaXN0W2ludF1dOgogICAgZGVmIGJhY2t0cmFjayhzdGFydEluZGV4LCBudW1zLCBwYXRoLCB1c2VkKToKICAgICAgICByZXNfbGlzdC5hcHBlbmQocGF0aFs6XSkKCiAgICAgICAgaWYgc3RhcnRJbmRleCA+IGxlbihudW1zKToKICAgICAgICAgICAgcmV0dXJuCgogICAgICAgIGZvciBpIGluIHJhbmdlKHN0YXJ0SW5kZXgsIGxlbihudW1zKSk6CiAgICAgICAgICAgIAogICAgICAgICAgICBpZiBpID4gMCBhbmQgbnVtc1tpXSA9PSBudW1zW2ktMV0gYW5kIHVzZWRbaS0xXSA9PSBGYWxzZToKICAgICAgICAgICAgICAgIGNvbnRpbnVlCgogICAgICAgICAgICBwYXRoLmFwcGVuZChudW1zW2ldKQogICAgICAgICAgICB1c2VkW2ldID0gVHJ1ZQogICAgICAgICAgICBiYWNrdHJhY2soaSArIDEsIG51bXMsIHBhdGgsIHVzZWQpCiAgICAgICAgICAgIHVzZWRbaV0gPSBGYWxzZQogICAgICAgICAgICBwYXRoLnBvcCgpCgoKICAgIHJlc19saXN0ID0gW10KICAgIHVzZWQgPSBbRmFsc2VdICogbGVuKG51bXMpCiAgICBiYWNrdHJhY2soMCwgc29ydGVkKG51bXMpLCBbXSwgdXNlZCkKICAgIHJldHVybiByZXNfbGlzdApgYGAKIyMjIHdheSAyOiB3aXRob3V0IGFueSBleHRyYSBhcnJheQpgYGBQWVRIT04KZGVmIHN1YnNldHNXaXRoRHVwKHNlbGYsIG51bXM6IExpc3RbaW50XSkgLT4gTGlzdFtMaXN0W2ludF1dOgogICAgZGVmIGJhY2t0cmFjayhzdGFydEluZGV4LCBudW1zLCBwYXRoKToKICAgICAgICByZXNfbGlzdC5hcHBlbmQocGF0aFs6XSkKCiAgICAgICAgaWYgc3RhcnRJbmRleCA+IGxlbihudW1zKToKICAgICAgICAgICAgcmV0dXJuCgogICAgICAgIGZvciBpIGluIHJhbmdlKHN0YXJ0SW5kZXgsIGxlbihudW1zKSk6CiAgICAgICAgICAgIAogICAgICAgICAgICBpZiBpID4gc3RhcnRJbmRleCBhbmQgbnVtc1tpXSA9PSBudW1zW2ktMV06CiAgICAgICAgICAgICAgICBjb250aW51ZQoKICAgICAgICAgICAgcGF0aC5hcHBlbmQobnVtc1tpXSkKICAgICAgICAgICAgYmFja3RyYWNrKGkgKyAxLCBudW1zLCBwYXRoKQogICAgICAgICAgICBwYXRoLnBvcCgpCgoKICAgIHJlc19saXN0ID0gW10KICAgIGJhY2t0cmFjaygwLCBzb3J0ZWQobnVtcyksIFtdKQogICAgcmV0dXJuIHJlc19saXN0CmBgYA==";export{g as default};
