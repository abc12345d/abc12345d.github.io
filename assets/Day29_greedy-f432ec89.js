const g="data:text/markdown;base64,IyAxMDA1LiBNYXhpbWl6ZSBTdW0gT2YgQXJyYXkgQWZ0ZXIgSyBOZWdhdGlvbnMKIyMjIHNvcnRpbmcgKyBncmVlZHkKYGBgUFlUSE9OCmRlZiBsYXJnZXN0U3VtQWZ0ZXJLTmVnYXRpb25zKHNlbGYsIG51bXM6IExpc3RbaW50XSwgazogaW50KSAtPiBpbnQ6CiAgICAgICAgbnVtcy5zb3J0KCkKICAgICAgICBtaW5JbmRleCA9IC0xCiAgICAgICAgZm9yIGluZGV4IGluIHJhbmdlKGxlbihudW1zKSk6CiAgICAgICAgICAgIGlmIGsgPT0gMDoKICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgCiAgICAgICAgICAgIGlmIG51bXNbaW5kZXhdIDwgMDoKICAgICAgICAgICAgICAgIG51bXNbaW5kZXhdID0gLW51bXNbaW5kZXhdCiAgICAgICAgICAgICAgICBrIC09IDEKICAgICAgICAgICAgZWxpZiBudW1zW2luZGV4XSA9PSAwOgogICAgICAgICAgICAgICAgayA9IDAKICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBpZiBudW1zW2luZGV4XSA+IDAgYW5kIGluZGV4ID4gMCBhbmQgbnVtc1tpbmRleF0gPiBudW1zW2luZGV4LTFdOgogICAgICAgICAgICAgICAgICAgIG1pbkluZGV4ID0gaW5kZXgtMQogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBtaW5JbmRleCA9IGluZGV4CiAgICAgICAgICAgICAgICBicmVhawoKICAgICAgICAjIG1pbkluZGV4ID09IC0gMSBhbmQgayA+IDAgd2hpY2ggbWVhbnMgdGhlIG51bXMgb25seSBjb250YWluIG5lZ2F0aXZlIGludGVnZXIKICAgICAgICAjIG1pbkluZGV4ICE9IC0xIG1lYW5zIHRoZSBtaW5JbmRleCBpcyBwb2ludHMgdG8gc21hbGxlc3QgaW50ZWdlciBpbiB0aGUgY3VycmVudCBudW1zIGFycmF5CiAgICAgICAgaWYgKChtaW5JbmRleCA9PSAtMSBhbmQgayA+IDApIG9yIG1pbkluZGV4ICE9IC0xKSAgYW5kIGsgJSAyID09IDE6CiAgICAgICAgICAgIG51bXNbbWluSW5kZXhdID0gLW51bXNbbWluSW5kZXhdCiAgICAgICAgCiAgICAgICAgcmV0dXJuIHN1bShudW1zKQpgYGAKIyMjIHByb2dyYW1tZXIgQ2FybCdzIHZlcnNpb24KYGBgUFlUSE9OCmRlZiBsYXJnZXN0U3VtQWZ0ZXJLTmVnYXRpb25zKHNlbGYsIG51bXM6IExpc3RbaW50XSwgazogaW50KSAtPiBpbnQ6CiAgICBudW1zLnNvcnQoa2V5PWxhbWJkYSB4OiBhYnMoeCkpCgogICAgIyBtYWtlcyBrIG5lZ2F0aXZlIGludGVnZXJzIGludG8gcG9zaXRpdmUgaW50ZWdlcnMKICAgIGZvciBpIGluIHJhbmdlKGxlbihudW1zKS0xLCAtMSwgLTEpOgogICAgICAgIGlmIGsgPT0gMDogCiAgICAgICAgICAgIHJldHVybiBzdW0obnVtcykKICAgICAgICBpZiBudW1zW2ldIDwgMDoKICAgICAgICAgICAgbnVtc1tpXSA9IC1udW1zW2ldCiAgICAgICAgICAgIGsgLT0gMQoKICAgIGlmIG51bXNbMF0gPT0gMDoKICAgICAgICAjIGsgPj0gMCBhbmQgbnVtc1swXSA9IDAKICAgICAgICByZXR1cm4gc3VtKG51bXMpCgogICAgZWxpZiBrICUgMiA9PSAxOgogICAgICAgICMgbnVtWzBdICE9IDAgYW5kIGsgIT0gMCBhbmQgayBpcyBvZGQgbnVtYmVyIAogICAgICAgIG51bXNbMF0gPSAtbnVtc1swXQoKICAgIHJldHVybiBzdW0obnVtcykKYGBgCgojIDEzNC4gR2FzIFN0YXRpb24KIyMjIGdyZWVkeSB2ZXJzaW9uIDE6CmBgYFBZVEhPTgpkZWYgY2FuQ29tcGxldGVDaXJjdWl0KHNlbGYsIGdhczogTGlzdFtpbnRdLCBjb3N0OiBMaXN0W2ludF0pIC0+IGludDoKICAgIGlmIHN1bShnYXMpIDwgc3VtKGNvc3QpOiByZXR1cm4gLSAxCgogICAgc3RhcnQgPSAwCiAgICBnYXNfdGFuayA9IDAKICAgIGZvciBpIGluIHJhbmdlKGxlbihnYXMpKToKICAgICAgICBnYXNfdGFuayArPSAoZ2FzW2ldIC0gY29zdFtpXSkKICAgICAgICBpZiBnYXNfdGFuayA8IDA6CiAgICAgICAgICAgICMg6K+05piOW3N0YXJ0LCBpXeWMuumXtOmDveS4jeiDveS9nOS4uui1t+Wni+S9jee9ru+8jOWboOS4uui/meS4quWMuumXtOmAieaLqeS7u+S9leS4gOS4quS9jee9ruS9nOS4uui1t+eCue+8jOWIsGnov5nph4zpg73kvJrmlq3msrkKICAgICAgICAgICAgIyDpgqPkuYjotbflp4vkvY3nva7ku45pKzHnrpfotbfvvIzlho3ku44w6K6h566XZ2FzX3RhbmsKICAgICAgICAgICAgZ2FzX3RhbmsgPSAwCiAgICAgICAgICAgIHN0YXJ0ID0gaSArIDEKCiAgICByZXR1cm4gc3RhcnQgCmBgYAojIyMgZ3JlZWR5IHZlcnNpb24gMjoKYGBgUFlUSE9OCmRlZiBjYW5Db21wbGV0ZUNpcmN1aXQoc2VsZiwgZ2FzOiBMaXN0W2ludF0sIGNvc3Q6IExpc3RbaW50XSkgLT4gaW50OgogICAgICAgIHN0YXJ0SW5kZXggPSAwCiAgICAgICAgdGFuayA9IGdhc1swXSAtIGNvc3RbMF0gCiAgICAgICAgZm9yIGluZGV4IGluIHJhbmdlKDEsbGVuKGdhcykpOgogICAgICAgICAgICBkaWZmID0gZ2FzW2luZGV4XSAtIGNvc3RbaW5kZXhdCiAgICAgICAgICAgIGlmIGRpZmYgPiB0YW5rICsgZGlmZjoKICAgICAgICAgICAgICAgIHN0YXJ0SW5kZXggPSBpbmRleAogICAgICAgICAgICAgICAgdGFuayA9IGRpZmYKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHRhbmsgPSB0YW5rICsgZGlmZgogICAgICAgIAogICAgICAgIGNvdW50ZXIgPSAwCiAgICAgICAgd2hpbGUgY291bnRlciA8PSBzdGFydEluZGV4OgogICAgICAgICAgICBpZiB0YW5rIDwgMDogcmV0dXJuIC0xCiAgICAgICAgCiAgICAgICAgICAgIHRhbmsgPSB0YW5rICsgZ2FzW2NvdW50ZXJdIC0gY29zdFtjb3VudGVyXQogICAgICAgICAgICBjb3VudGVyICs9IDEKICAgICAgICAKICAgICAgICByZXR1cm4gc3RhcnRJbmRleApgYGAKCiMgMTM1LiBDYW5keQpDaGVjayB0aGUgY29uc2VjdXRpdmUgZWxlbWVudHMgaW4gdHdvIHBhc3MuIEZvciB0aGUgZm9yd2FyZCBwYXNzLCBpZiB0aGUgcmF0aW5nIG9mIGEgY2hpbGQgPiBsZWZ0IGNoaWxkLCBpbmNyZWFzZSB0aGUgbnVtYmVyIG9mIGBkaXN0cmlidXRlZF9jYW5keVtjaGlsZF1gIGJ5IGAxICsgZGlzdHJpYnV0ZWRfY2FuZHlbcHJldmlvdXMgY2hpbGRdYC4gRm9yIHRoZSBiYWNrd2FyZCBwYXNzLCBpZiB0aGUgcmF0aW5nIG9mIGEgY2hpbGQgPiByaWdodCBjaGlsZCwgdGhlIG51bWJlciBvZiBgZGlzdHJpYnV0ZWRfY2FuZHlbY2hpbGRdYCBpcyB0aGUgbWF4aW11bSBvZiBpdHMgb3JpZ2luYWwgZGlzdHJpYnV0ZWQgY2FuZHkgYW5kIHRoZSBudW1iZXIgb2YgYGRpc3RyaWJ1dGVkX2NhbmR5W25leHQgY2hpbGRdICsgMWAuCiAgICAgICAgClRpbWUgY29tcGxleGl0eTogTyhuKVwKU3BhY2UgY29tcGxleGl0eTogTyhuKQpgYGBQWVRIT04KZGVmIGNhbmR5KHNlbGYsIHJhdGluZ3M6IExpc3RbaW50XSkgLT4gaW50OgogICAgCiAgICBkaXN0cmlidXRlZF9jYW5keSA9IFsxXSAqIGxlbihyYXRpbmdzKQogICAgCiAgICAjIGZvcndhcmQgY2hlY2tpbmc6IGNoZWNrIGlmIHJpZ2h0ID4gbGVmdAogICAgZm9yIGkgaW4gcmFuZ2UoMSwgbGVuKHJhdGluZ3MpKToKICAgICAgICBpZiByYXRpbmdzW2ldID4gcmF0aW5nc1tpIC0gMV06CiAgICAgICAgICAgIGRpc3RyaWJ1dGVkX2NhbmR5W2ldID0gZGlzdHJpYnV0ZWRfY2FuZHlbaS0xXSArIDEKICAgIAogICAgIyBiYWNrd2FyZCBjaGVja2luZzogY2hlY2sgaWYgbGVmdCA+IHJpZ2h0CiAgICBmb3IgaSBpbiByYW5nZShsZW4ocmF0aW5ncyktMiAsIC0xLCAtMSk6CiAgICAgICAgaWYgcmF0aW5nc1tpXSA+IHJhdGluZ3NbaSArIDFdOgogICAgICAgICAgICBkaXN0cmlidXRlZF9jYW5keVtpXSA9IG1heChkaXN0cmlidXRlZF9jYW5keVtpXSwgZGlzdHJpYnV0ZWRfY2FuZHlbaSsxXSArIDEpCgogICAgcmV0dXJuIHN1bShkaXN0cmlidXRlZF9jYW5keSkgCmBgYAo=";export{g as default};
