const g="data:text/markdown;base64,IyA0MTYuIFBhcnRpdGlvbiBFcXVhbCBTdWJzZXQgU3VtCgo8aW1nIHdpZHRoPSI2NDkiIGFsdD0iaW1hZ2UiIHNyYz0iaHR0cHM6Ly9naXRodWIuY29tL2FiYzEyMzQ1ZC9hbGdvcml0aG1fcHJhY3RpY2UvYXNzZXRzLzQ0NTEyNzIyL2I5YTliZjhhLTA3ZTUtNDA3Ni05ZWZkLTE2MDVhNzY2NTcyMyI+CgoKIyMgd2F5IDM6IGR5bmFtaWMgcHJvZ3JhbW1pbmcKQ29yZSBpZGVhOiAKClRyYW5zZm9ybSB0aGUgcXVlc3Rpb24gaW50byAxLzAga25hcHNhY2sgcHJvYmxlbSB3aGljaCB1c2UgZHluYW1pYyBwcm9ncmFtbWluZyBhbGdvcml0aG0uCgpFLmcuCmBgYApudW1zID0gWzEsIDUsIDExLCA1XQpCYWcgbGltaXQgPSBzdW0obnVtcykgLy8gMiA9IDExCndlaWdodFtpXSA9IHZhbHVlW2ldID0gbnVtc1tpXQpgYGAKCldlIHRyeSB0byBmaWxsIHRoZSBiYWcgYnkgdXNpbmcgbnVtYmVycyBmcm9tIGBudW1zYCBhcnJheSwgYW5kIHRoZSBmaW5hbCB3ZWlnaHQgb2YgdGhlIGJhZyB3aWxsIG5ldmVyIGV4Y2VlZCAxMSBhcyB3ZSBzZXQgdGhlIGJhZyBsaW1pdCBhcyAxMS4gSWYgdGhlIGBmaW5hbCB3ZWlnaHQgPSAxMWAsIHdoaWNoIG1lYW5zIHdlIGNhbiBmaW5kIGEgY29tYmluYXRpb24gb2YgbnVtYmVycyB0aGF0IHN1bW1lZCB0byAxMSAoYWxzbyBtZWFucyB3ZSBjYW4gcGFydGl0aW9uIHRoZSBgbnVtc2AgYXJyYXkgaW50byB0d28gc3Vic2V0cyBzdWNoIHRoYXQgdGhlIHN1bSBvZiB0aGUgZWxlbWVudHMgaW4gYm90aCBzdWJzZXRzIGlzIGVxdWFsKS4gSWYgdGhlIGBmaW5hbCB3ZWlnaHQgPCAxMWAsIHdoaWNoIG1lYW5zIHdlIGNhbiBwYXJ0aXRpb24gdGhlIGBudW1zYCBhcnJheSBpbnRvIHR3byBzdWJzZXRzIHN1Y2ggdGhhdCB0aGUgc3VtIG9mIHRoZSBlbGVtZW50cyBpbiBib3RoIHN1YnNldHMgYXJlIGFzIGNsb3NlIGFzIHBvc3NpYmxlIGJ1dCB0aGUgc3VtcyBhcmUgbm8gZXF1YWwuCgpTdGVwczoKCjEuIERldGVybWluZSB0aGUgYGRwYCBhcnJheSBhbmQgdGhlIG1lYW5pbmcgb2YgaXRzIHN1YnNjcmlwdHMKLSBgZHBbaV1gID0gdGhlIG1heGltdW0gd2VpZ2h0IG9mIGl0ZW1zIGluIHRoZSBiYWcgd2hlbiB0aGUgYmFnIGxpbWl0IGlzIGBpYAoKMi4gRGV0ZXJtaW5lIHRoZSByZWN1cnJlbmNlIGZvcm11bGEKLSBgZHBbaV0gPSBtYXgoZHBbaV0sIGRwW2kgLSB3ZWlnaHRbal1dICsgdmFsdWVbal0pYAoKMy4gVGhlIGluaXRpYWxpc2F0aW9uIG9mIHRoZSBgZHBgIGFycmF5Ci0gYGRwWzBdID0gMCwgLi4uICwgZHBbaGFsZl90b3RhbF0gPSAwYAoKNC4gRGV0ZXJtaW5lIHRoZSB0cmF2ZXJzYWwgb3JkZXIKLSBXZSBtdXN0IHRyYXZlcnNlIGZyb20gdGhlIGxhc3QgYmFnIHdlaWdodCBzbyB0aGF0IHRoZSB0b3AgbGVmdCBjb3JuZXIgd2lsbCBub3QgYmUgb3Zlcndyb3RlCgo1LiBEZXJpdmUgdGhlIHJlc3VsdGVkIGBkcGAgYXJyYXkgYW5kIGNoZWNrIGl0IGJ5IHByaW50aW5nCi0gRm9yIGV4YW1wbGUsIHdoZW4gYG51bXMgPSBbMSwgNSwgMTEsIDVdYCwgdGhlIGBkcGAgc2hvdWxkIGJlIGBbMCwgMSwgMSwgMSwgMSwgNSwgNiwgNiwgNiwgNiwgMTAsIDExXWAuCgpUaW1lIGNvbXBsZXhpdHk6IE8objxzdXA+Mjwvc3VwPikKClNwYWNlIGNvbXBsZXhpdHk6IE8obikKCmBgYFBZVEhPTgpkZWYgY2FuUGFydGl0aW9uKHNlbGYsIG51bXM6IExpc3RbaW50XSkgLT4gYm9vbDoKCiAgICB0b3RhbCA9IHN1bShudW1zKQogICAgaWYgbm90ICh0b3RhbCAvLyAyKSA9PSAodG90YWwgLyAyKToKICAgICAgICByZXR1cm4gRmFsc2UKCiAgICBoYWxmX3RvdGFsID0gdG90YWwgLy8gMgoKICAgIGRwID0gWzBdICogKGhhbGZfdG90YWwgKyAxKQogICAgZm9yIG51bSBpbiBudW1zOgogICAgICAgIGZvciBpIGluIHJhbmdlKGhhbGZfdG90YWwsIG51bSAtIDEsIC0xKToKICAgICAgICAgICAgZHBbaV0gPSBtYXgoZHBbaV0sIGRwW2kgLSBudW1dICsgbnVtKQoKICAgIHJldHVybiBkcFtoYWxmX3RvdGFsXSA9PSBoYWxmX3RvdGFsCmBgYAoKIyAxMDQ5LiBMYXN0IFN0b25lIFdlaWdodCBJSQpjb3JlIGlkZWE6CgpUcmFuc2Zvcm0gdGhlIHF1ZXN0aW9uIGludG8gMS8wIGtuYXBzYWNrIHByb2JsZW0gd2hpY2ggdXNlIGR5bmFtaWMgcHJvZ3JhbW1pbmcgYWxnb3JpdGhtLgoKRnJvbSB0aGUgcXVlc3Rpb24sIHdlIGtuZXcgdGhhdCB0aGVyZSBpcyBhdCBtb3N0IG9uZSBzdG9uZSBsZWZ0IGF0IHRoZSBlbmQgb2YgdGhlIGdhbWUgYW5kIHdlIG11c3QgcmV0dXJuIHRoZSBzbWFsbGVzdCBwb3NzaWJsZSB3ZWlnaHQgb2YgdGhlIGxlZnQgc3RvbmUgKGlmIHRoZXJlIGlzIG9uZSkuIFdlIGNhbiBnZXQgdGhlIHNtYWxsZXN0IGxlZnQgc3RvbmUgYnkgcGFydGl0aW9uaW5nIHRoZSBzdG9uZXMgaW50byB0d28gcGlsZXMgb2Ygc3RvbmVzIGFuZCBzbWFzaCBhbnkgdHdvIHN0b25lcyBmcm9tIHRoZSB0d28gcGlsZXMgZWFjaCB0aW1lLgoKYGBgUFlUSE9OCgpzdG9uZXMgPSBbYSxiLGIsYyxjLGQsZSxmXQoKYWJzKChhIHBpbGUgb2Ygc3RvbmVzKSAtIChhIHBpbGUgb2Ygc3RvbmVzKSkKPSBhYnMoKGEsYixjLGQpIC0gKGIsYyxlLGYpKQoKTGV0J3Mgc2F5LCB3ZSBzbWFzaCBzdG9uZSBkIGFuZCBlLCAKaWYgZCA+IGU6Cj0gYWJzKChhLGIsYywgKGQtZSkpIC0gKGIsYyxmKSkKaWYgZCA8IGU6Cj0gYWJzKChhLGIsYykgLSAoYixjLChlLWQpLGYpKQoKCldlIGNvbnRpbnVlIHRoZSBzbWFzaGluZyB1bnRpbCBvbmx5IG9uZSBzdG9uZSBsZWZ0IGluIGVhY2ggcGlsZS4gClRocm91Z2h0b3V0IHRoZSBzbWFzaGluZyBwcm9jZXNzLCB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSB0d28gcGlsZXMgb2Ygc3RvbmUgCndpbGwgcmVtYWluIHRoZSBzYW1lIHdoaWNoIGlzIGVxdWFsIHRvIHRoZSBsZWZ0X3N0b25lCgo9IGFicyhzdG9uZV9YIC0gc3RvbmVfWSApCj0gbGVmdF9zdG9uZQpgYGAKClRvIGdldCB0d28gcGlsZXMgb2Ygc3RvbmVzIHdoaWNoIGhhdmUgc21hbGxlc3QgZGlmZmVyZW5jZSBpbiB3ZWlnaHQsIHdlIG11c3QgZm9ybSB0d28gcGlsZXMgb2Ygc3RvbmVzIHdoZXJlIHRoZWlyIHdlaWdodCBzdW1tZWQgdG8gYHN1bShzdG9uZXMpIC8vIDJgIG9yIGFzIGNsb3NlIGFzIHBvc3NpYmxlIHRvIHRoZSBudW1iZXIuCgoKRS5nLiAKYGBgCnN0b25lcyA9IFsyLDcsNCwxLDgsMV0KQmFnIGxpbWl0ID0gc3VtKHN0b25lcykgLy8gMiA9IDExCndlaWdodFtpXSA9IHZhbHVlW2ldID0gc3RvbmVzW2ldCmRwW2ldID0gdGhlIG1heGltdW0gd2VpZ2h0IG9mIHN0b25lcyBpbiB0aGUgYmFnIHdoZW4gdGhlIGJhZyBsaW1pdCBpcyBgaWAKYGBgCgpUaW1lIGNvbXBsZXhpdHk6IE8obSAqIG4pIHdoZXJlIG0gPSBsZW4oc3RvbmVzKSwgbiA9IHN1bShzdG9uZXMpCgpTcGFjZSBjb21wbGV4aXR5OiBPKG4pCgpgYGBQWVRIT04KZGVmIGxhc3RTdG9uZVdlaWdodElJKHNlbGYsIHN0b25lczogTGlzdFtpbnRdKSAtPiBpbnQ6CiAgICBoYWxmU3VtID0gc3VtKHN0b25lcykgLy8gMiAKCiAgICAjIGluaXRpYWxpc2F0aW9uIG9mIGRwIGFycmF5CiAgICBkcCA9IFswXSAqIChoYWxmU3VtICsgMSkKICAgIGZvciBzdG9uZSBpbiBzdG9uZXM6CiAgICAgICAgIyB0cmF2ZXJzZSBmcm9tIHRoZSBsYXN0IGJhZyB3ZWlnaHQgCiAgICAgICAgIyBzbyB0aGF0IHRoZSB0b3AgbGVmdCBjb3JuZXIgd2lsbCBub3QgYmUgb3Zlcndyb3RlCiAgICAgICAgZm9yIGJhZyBpbiByYW5nZShoYWxmU3VtLCBzdG9uZS0xLCAtMSk6CiAgICAgICAgICAgIGRwW2JhZ10gPSBtYXgoZHBbYmFnXSwgZHBbYmFnLXN0b25lXSArIHN0b25lKQoKICAgIHJldHVybiAoc3VtKHN0b25lcyktIGRwW2hhbGZTdW1dKSAtIGRwW2hhbGZTdW1dCmBgYAoKCiMgcmVmZXJlbmNlCi0gW05lZXRjb2RlIC0gTGFzdCBTdG9uZSBXZWlnaHQgSUkgTGVldGNvZGUgMTA0OV0oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1nZFhra216dlIzYyk=";export{g as default};
