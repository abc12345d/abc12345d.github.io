const Z="data:text/markdown;base64,IyBCaW5hcnkgdHJlZQpCaW5hcnkgdHJlZSBpcyBhIHRyZWUgZGF0YSBzdHJ1Y3R1cmUgd2hlcmUgZXZlcnkgbm9kZSBpbiBhIGJpbmFyeSB0cmVlIGhhcyAwIHRvIDIgY2hpbGRyZW4uCgpUaGVyZSBhcmUgdHdvIHdheXMgdG8gcmVwcmVzZW50IGJpbmFyeSB0cmVlIGluIG1lbW9yeTpcCigxKSBhcnJheSAoW3NlZSBoZWFwIGRhdGEgc3R1Y3R1cmVdKC4vRFNfSGVhcC5tZCkpXAooMikgbGlua2VkIGxpc3QgKHdpdGggYGxlZnRgIGNoaWxkIG5vZGUgYW5kIGByaWdodGAgY2hpbGQgbm9kZSkKCiMjIyBUeXBlcyBvZiBiaW5hcnkgdHJlZQojIyMjIEZ1bGwgYmluYXJ5IHRyZWU6IApldmVyeSBub2RlIGhhcyAwIG9yIDIgY2hpbGRyZW4uCgo8aW1nIHdpZHRoPSI1NzciIGFsdD0iMjAyMzAyMTYxMTI5NDUiIHNyYz0iaHR0cHM6Ly9naXRodWIuY29tL2FiYzEyMzQ1ZC9hbGdvcml0aG1fcHJhY3RpY2UvYXNzZXRzLzQ0NTEyNzIyLzgzNmRmMjM1LWM0ZjAtNGNlZC1iODQ1LTk5OGNmNDhlMTJiOCI+CgojIyMjIENvbXBsZXRlIGJpbmFyeSB0cmVlOiAKQWxsIGxldmVscyBhcmUgY29tcGxldGVseSBmaWxsZWQgZXhjZXB0IHBvc3NpYmx5IHRoZSBsYXN0IGxldmVsIGFuZCBhbGwgbm9kZXMgaW4gdGhlIGxhc3QgbGV2ZWwgYXJlIGFzIGZhciBsZWZ0IGFzIHBvc3NpYmxlLgoKPGltZyB3aWR0aD0iNTk1IiBhbHQ9IjIwMjMwMjE2MTEyODQ5IiBzcmM9Imh0dHBzOi8vZ2l0aHViLmNvbS9hYmMxMjM0NWQvYWxnb3JpdGhtX3ByYWN0aWNlL2Fzc2V0cy80NDUxMjcyMi8yMjA5YjgwOS0yY2RjLTQ5MjMtYWU4Yy01NWQ1OTc3OTgwN2QiPgogCiMjIyMgQmFsYW5jZWQgYmluYXJ5IHRyZWUgKGFrYSBBVkwgdHJlZSkKRm9yIGVhY2ggbm9kZSwgdGhlIGhlaWdodCBkaWZmZXJlbmNlIG9mIHRoZSBsZWZ0IGFuZCByaWdodCBzdWJ0cmVlIG9mIHRoZSBub2RlIGlzIG5vdCBtb3JlIHRoYW4gMQoKPGltZyB3aWR0aD0iODk0IiBhbHQ9IjIwMjMwMjE2MTEzNDE4IiBzcmM9Imh0dHBzOi8vZ2l0aHViLmNvbS9hYmMxMjM0NWQvYWxnb3JpdGhtX3ByYWN0aWNlL2Fzc2V0cy80NDUxMjcyMi83MDdjYTZjOC04YzgyLTQzODYtOGI2NS00MTE1YjM3YTU3MWQiPgoKIyMjIFdheXMgdG8gdHJhdmVyc2UgYSB0cmVlCiMjIyMgIEJyZWFkdGgtZmlyc3Qgc2VhcmNoIChCRlMpCi0gdmlzaXRzIGFsbCBub2RlcyBsZXZlbCBieSBsZXZlbAotIEJGUyBpcyBpbXBsZW1lbnRlZCB1c2luZyBxdWV1ZSBhbmQgY2FuIG9ubHkgYmUgdHJhdmVyc2VkIGluIGl0ZXJhdGl2ZSBhcHByb2FjaAoKIyMjIyBEZXB0aC1maXJzdCBzZWFyY2ggKERGUykKLSBleHBsb3JlcyBlYWNoIGJyYW5jaCB1bnRpbCByZWFjaGluZyB0aGUgbGVhZiBub2RlIHRoZW4gYmFja3RyYWNraW5nIHRvIG5leHQgYnJhbmNoCi0gdGhlIHRyYXZlcnNhbCBjYW4gYmUgZG9uZSBpbiB0aHJlZSB0eXBlcyBvZiBvcmRlcnM6CiAgICAxLiAqKklub3JkZXIqKiAKICAgICAgICAtIHRyYXZlcnNlIGZyb20gdGhlwqAqKmxlZnQqKsKgc3VidHJlZSB0byB0aGXCoCoqcm9vdCoqwqB0aGVuIHRvIHRoZcKgKipyaWdodCoqwqBzdWJ0cmVlCiAgICAgICAgLSBub3JtYWxseSB1c2VkIGluIHByb2JsZW0gd2l0aCBiaW5hcnkgc2VhcmNoIHRyZWUgKHNlZSBbZGV0YWlsc10oI2JpbmFyeS1zZWFyY2gtdHJlZSkpCiAgICAyLiAqKlByZW9yZGVyKioKICAgICAgICAtIHRyYXZlcnNlIGZyb20gdGhlwqAqKnJvb3QqKsKgdG8gdGhlwqAqKmxlZnQqKsKgc3VidHJlZSB0aGVuIHRvIHRoZcKgKipyaWdodCoqwqBzdWJ0cmVlLiAKICAgICAgICAtIG5vcm1hbGx5IHVzZWQgd2hlbiB3ZSB3YW50IHRvIHBhc3Mgc29tZXRoaW5nIGZyb20gcm9vdCBub2RlIHRvIGxlYWYgbm9kZSAoc2VlIFtleGFtcGxlXSguL0RheTEzX2Jmc19iaW5hcnlfdHJlZS5tZC8jMTA0LW1heGltdW0tZGVwdGgtb2YtYmluYXJ5LXRyZWUpKQogICAgMy4gKipQb3N0IG9yZGVyKioKICAgICAgICAtIHRyYXZlcnNlIGZyb20gdGhlwqAqKmxlZnQqKsKgc3VidHJlZSB0byB0aGXCoCoqcmlnaHQqKsKgc3VidHJlZSB0aGVuIHRvIHRoZcKgKipyb290KiouIAogICAgICAgIC0gbm9ybWFsbHkgdXNlZCB3aGVuIHdlIHdhbnQgdG8gcGFzcyBzb21ldGhpbmcgZnJvbSBsZWFmIG5vZGUgdG8gcm9vdCBub2RlLiAoc2VlIFtleGFtcGxlXSguL0RheTEzX2Jmc19iaW5hcnlfdHJlZS5tZC8jMTA0LW1heGltdW0tZGVwdGgtb2YtYmluYXJ5LXRyZWUpKQogICAgICAgIC0gQmVzaWRlcywgcG9zdCBvcmRlciB0cmF2ZXJzYWwgY2FuIGJlIGZpbmlzaGVkIGVhcmxpZXIgYnkgc2V0dGluZyBlYXJseSB0ZXJtaW5hdGlvbiBjYXNlIChzZWUgW2V4YW1wbGVdKC4vRGF5MThfYmluYXJ5X3RyZWUubWQvI3dheS0xLXJlY3Vyc2l2ZS1hcHByb2FjaC1kZnMtaW4tcG9zdG9yZGVyLXdpdGgtZWFybHktdGVybWluYXRpb24tY2FzZSkpCgotIERGUyBpcyBpbXBsZW1lbnRlZCB1c2luZyBzdGFjay4gSGVuY2UsIHRoZSB0cmF2ZXJzYWwgb2YgdHJlZSBjYW4gYmUgZG9uZSBpbjpcCihhKSByZWN1cnNpdmUgYXBwcm9hY2ggXAooYikgaXRlcmF0aXZlIGFwcHJvYWNoCgo8aW1nIHdpZHRoPSI4OTQiIGFsdD0iMjAyMzAyMTYxMjAwMTEiIHNyYz0iaHR0cHM6Ly9naXRodWIuY29tL2FiYzEyMzQ1ZC9hbGdvcml0aG1fcHJhY3RpY2UvYXNzZXRzLzQ0NTEyNzIyLzlmZDY4OWIwLTQ0YjYtNDc4Yi04M2ZkLWNmNTM5MDQzODU5YyI+CgojIEJpbmFyeSBzZWFyY2ggdHJlZQpEZWZpbml0aW9uIG9mIEJpbmFyeSBzZWFyY2ggdHJlZTpcCigxKSBBbGwgdGhlIG5vZGVzIGluIGxlZnQgc3VidHJlZSA8IGN1cnJlbnQgbm9kZSBcCigyKSBBbGwgdGhlIG5vZGVzIGluIHJpZ2h0IHN1YnRyZWUgPiBjdXJyZW50IG5vZGUgCgpEdWUgdG8gdGhlIGRlZmluaXRpb24gb2YgYmluYXJ5IHNlYXJjaCB0cmVlLCBpbm9yZGVyIHRyYXZlcnNlIG9mIGJpbmFyeSBzZWFyY2ggdHJlZSB3aWxsIHJlc3VsdCBpbiBhIHNvcnRlZCBhcnJheSB3aGljaCBpcyBpbiBhc2NlbmRpbmcgb3JkZXIuCgpIZW5jZSwgd2F5cyB0byBzb2x2ZSBwcm9ibGVtcyBpbnZvbHZlZCBiaW5hcnkgc2VhcmNoIHRyZWU6XAooMSkgZGZzIGluIHBvc3RvcmRlciB3aXRoIG5hcnJvd2VyIHZhbGlkIHJhbmdlIGFzIGlucHV0cyBmb3IgbmV4dCBsYXllciAoc2VlIFtleGFtcGxlXSguL0RheTE3X2JpbmFyeV90cmVlLm1kLyN3YXktMi1yZWN1cnNpdmUtYXBwcm9hY2gtZGZzLWluLXBvc3RvcmRlci13aXRoLW5hcnJvd2VyLXZhbGlkLXJhbmdlLWFzLWlucHV0LWZvci1uZXh0LWxheWVyKSkgXAooMikgZGZzIGluIGlub3JkZXIgd2l0aCBgcHJlYCByZWNvcmRpbmcgdGhlIGxhc3QgdmlzaXRlZCBub2RlIChzZWUgW2V4YW1wbGVdKC4vRGF5MThfYmluYXJ5X3RyZWUubWQvI3dheS0yLXJlY3Vyc2l2ZS1hcHByb2FjaC1kZnMtaW4taW5vcmRlcikpXAooMykgc2VyaWFsaXNlIGJpbmFyeSBzZWFyY2ggdHJlZSBpbiBpbm9yZGVyLCB0aGVuIGRvIG9wZXJhdGlvbnMgb24gdGhlIHNlcmlhbGlzZWQgYXJyYXkgKHNlZSBbZXhhbXBsZV0oLi9EYXkxN19iaW5hcnlfdHJlZS5tZC8jd2F5LTEtc2VyaWFsaXNlLWJpbmFyeS1zZWFyY2gtdHJlZS1pbi1pbm9yZGVyLXRoZW4tY2hlY2staWYtdGhlLXNlcmlhbGlzZWQtbGlzdC1pcy1tb25vdG9uaWMpKQoKIyBSZWZlcmVuY2UKW0JyZWFkdGgtRmlyc3QgU2VhcmNoIChCRlMpIGFuZCBEZXB0aC1GaXJzdCBTZWFyY2ggKERGUykgZm9yIEJpbmFyeSBUcmVlcyBpbiBKYXZhXShodHRwczovL3d3dy5kaWdpdGFsb2NlYW4uY29tL2NvbW11bml0eS90dXRvcmlhbHMvYnJlYWR0aC1maXJzdC1zZWFyY2gtZGVwdGgtZmlyc3Qtc2VhcmNoLWJmcy1kZnMjd2hhdC1pcy1kZXB0aC1maXJzdC1zZWFyY2gtZGZzKVwKW+S7o+eggemaj+aDs+W9lSAtIOS6jOWPieagkV0oaHR0cHM6Ly9wcm9ncmFtbWVyY2FybC5jb20vJUU0JUJBJThDJUU1JThGJTg5JUU2JUEwJTkxJUU3JTkwJTg2JUU4JUFFJUJBJUU1JTlGJUJBJUU3JUExJTgwLmh0bWwjJUU0JUJBJThDJUU1JThGJTg5JUU2JUEwJTkxJUU3JTlBJTg0JUU3JUE3JThEJUU3JUIxJUJCKQ==";export{Z as default};
